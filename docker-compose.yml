services:
  postgres:
    image: postgres:16
    container_name: morpheus-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      # This binds the port only to the host's localhost interface for better security.
      # It prevents the database from being exposed to the public internet.
      - "127.0.0.1:${POSTGRES_PORT}:5432"
    volumes:
      - morpheus_pg_data:/var/lib/postgresql/data
      # This line mounts the init.sql script to be run on first-time creation.
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: morpheus-backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      whisper:
        condition: service_started
    ports:
      - "${BACKEND_PORT}:9000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - PORT=9000
      # Pass other necessary environment variables from a .env file
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - USE_OPENAI=${USE_OPENAI}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - GOOGLE_GEOCODING_API_KEY=${GOOGLE_GEOCODING_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_WEB_APP_URL=${TELEGRAM_WEB_APP_URL}
      - WHISPER_URL=http://whisper:8000
      # --- Development/Production Settings ---
      - NODE_ENV=${NODE_ENV:-production}
      - DOCKER_ENV=true
      - DANGEROUSLY_BYPASS_AUTH=${DANGEROUSLY_BYPASS_AUTH:-false}
      - DATABASE_TYPE=${DATABASE_TYPE:-postgres}
      - USE_MOCK_API=${USE_MOCK_API:-false}

  whisper:
    image: fedirz/faster-whisper-server:latest-cpu
    container_name: morpheus-whisper
    restart: always
    ports:
      - "127.0.0.1:${WHISPER_PORT:-8000}:8000"
    volumes:
      - whisper_models:/root/.cache/huggingface
    environment:
      - MODEL=tiny
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8000/health\")' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  frontend:
    build:
      context: ./frontend
      args:
        VITE_GOOGLE_PLACES_API_KEY: ${VITE_GOOGLE_PLACES_API_KEY}
    container_name: morpheus-frontend
    restart: always
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend

volumes:
  morpheus_pg_data:
  whisper_models:
