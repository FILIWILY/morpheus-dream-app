import { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { ProfileProvider } from './context/ProfileContext'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä
import { LocalizationProvider } from './context/LocalizationContext';
import WelcomePage from './pages/WelcomePage';
import RecordingPage from './pages/RecordingPage';
import InterpretationPage from './pages/InterpretationPage';
import HistoryPage from './pages/HistoryPage';
import ProfilePage from './pages/ProfilePage';
import SettingsPage from './pages/SettingsPage';
import LanguagePage from './pages/LanguagePage';
import PrivateRoute from './components/PrivateRoute';
import { getProfile, api } from './services/api';
import i18n from './services/i18n'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π i18n
import Placeholder from './components/Placeholder';
import React from 'react'; // Added missing import for React
import { detectTelegramEnvironment, initializeTelegramWebApp, isValidProductionEnvironment } from './utils/telegramDetection.js';

// ‚úÖ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export const AppReadyContext = React.createContext(false);


// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false, error: null };
  }

  static getDerivedStateFromError(error) {
    return { hasError: true, error: error.message };
  }

  componentDidCatch(error, errorInfo) {
    console.error('[ErrorBoundary] React error caught:', error, errorInfo);
  }

  render() {
    if (this.state.hasError) {
      // –ü–µ—Ä–µ–¥–∞–µ–º debugInfo –≤ Placeholder, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
      return <Placeholder error={this.state.error} debugInfo={this.props.debugInfo || {}} />;
    }

    return this.props.children;
  }
}

// –°–æ–∑–¥–∞–µ–º I18nContext –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ i18n —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
// –≠—Ç–æ –∑–∞–º–µ–Ω–∞ I18nextProvider, –∫–æ—Ç–æ—Ä—É—é —è –æ—à–∏–±–æ—á–Ω–æ –ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
export const I18nContext = React.createContext(i18n);


function App() {
  const [view, setView] = useState('loading'); // 'loading', 'app', 'placeholder'
  const [i18nInstance, setI18nInstance] = useState(i18n);
  const [error, setError] = useState(null);
  const [debugInfo, setDebugInfo] = useState({});
  const [isAppReady, setIsAppReady] = useState(false); // ‚úÖ –ù–æ–≤—ã–π —Å—Ç–µ–π—Ç


  useEffect(() => {
    const isDev = import.meta.env.DEV;
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ WebApp
    const getWebApp = () => {
        try {
            return window.Telegram?.WebApp;
        } catch (e) {
            console.error('[App] –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ window.Telegram.WebApp:', e);
            return null;
        }
    };

    const initializeApp = (tg) => {
      console.log('[App] ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
      if (!tg) {
          console.error('[App] ‚ùå –û–±—ä–µ–∫—Ç Telegram WebApp –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —ç—Ç–∞–ø–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏!');
          setError('–û–±—ä–µ–∫—Ç Telegram WebApp –Ω–µ –Ω–∞–π–¥–µ–Ω.');
          setView('placeholder');
          return;
      }

      // –Ø–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º ready(), —á—Ç–æ–±—ã —Å–æ–æ–±—â–∏—Ç—å Telegram, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ.
      tg.ready();
      
      // –í—ã–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è UX
      initializeTelegramWebApp({ webApp: tg, isTelegram: true });
      
      console.log('[App] ‚ú® –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º view = "app"');
      setView('app');
      setIsAppReady(true); // ‚úÖ –ü–æ–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–æ!
    };
    
    const startApp = () => {
        console.log('[App] üöÄ –ó–∞–ø—É—Å–∫ startApp...');
        const tg = getWebApp();

        setDebugInfo({
            isDev,
            isTgObjectPresent: !!tg,
            isInitDataPresent: !!tg?.initData,
            initDataLength: tg?.initData?.length || 0,
            platform: tg?.platform || 'unknown',
            version: tg?.version || 'unknown',
            colorScheme: tg?.colorScheme || 'unknown',
        });

        if (!tg) {
            console.log('[App] ‚ùå –û–±—ä–µ–∫—Ç Telegram WebApp –Ω–µ –Ω–∞–π–¥–µ–Ω.');
            if (isDev) {
                console.log('[App] üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
                initializeApp(tg); // –ü–µ—Ä–µ–¥–∞–µ–º tg, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω null, –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
            } else {
                setError('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ –≤ Telegram.');
                setView('placeholder');
                setIsAppReady(true); // ‚úÖ –ì–æ—Ç–æ–≤–æ, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ (—á—Ç–æ–±—ã –ª–æ–≥–∏ –ø–æ–∫–∞–∑–∞–ª–∏—Å—å)
            }
            return;
        }

        // –ö–ª—é—á–µ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∂–¥–µ–º initData
        if (tg.initData) {
            console.log(`[App] ‚úÖ initData —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞ (–¥–ª–∏–Ω–∞: ${tg.initData.length}). –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ.`);
            initializeApp(tg);
        } else {
            console.log('[App] ‚è≥ initData –µ—â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º-–∞—É—Ç –∏ —Å–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è.');
            let resolved = false;
            const timeout = 5000; // 5 —Å–µ–∫—É–Ω–¥

            const resolutionHandler = () => {
                if (resolved) return;
                const currentTg = getWebApp();
                if (currentTg && currentTg.initData) {
                    resolved = true;
                    console.log(`[App] ‚úÖ initData –ø–æ–ª—É—á–µ–Ω–∞ —á–µ—Ä–µ–∑ —Å–ª—É—à–∞—Ç–µ–ª—å 'viewportChanged' (–¥–ª–∏–Ω–∞: ${currentTg.initData.length}).`);
                    if (fallbackTimeout) clearTimeout(fallbackTimeout);
                    currentTg.offEvent('viewportChanged', resolutionHandler);
                    initializeApp(currentTg);
                }
            };
            
            const fallbackTimeout = setTimeout(() => {
                if (resolved) return;
                const currentTg = getWebApp();
                if (currentTg && currentTg.initData) {
                    resolved = true;
                    console.log(`[App] ‚úÖ initData –ø–æ–ª—É—á–µ–Ω–∞ —á–µ—Ä–µ–∑ fallback —Ç–∞–π–º-–∞—É—Ç (–¥–ª–∏–Ω–∞: ${currentTg.initData.length}).`);
                    currentTg.offEvent('viewportChanged', resolutionHandler);
                    initializeApp(currentTg);
                } else {
                    console.error(`[App] ‚ùå Critical Error: initData –Ω–µ –ø–æ—è–≤–∏–ª–∞—Å—å –ø–æ—Å–ª–µ ${timeout}–º—Å.`);
                    setError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç Telegram.');
                    setView('placeholder');
                    setIsAppReady(true); // ‚úÖ –ì–æ—Ç–æ–≤–æ, –¥–∞–∂–µ –µ—Å–ª–∏ —Å –æ—à–∏–±–∫–æ–π (—á—Ç–æ–±—ã –ª–æ–≥–∏ –ø–æ–∫–∞–∑–∞–ª–∏—Å—å)
                }
            }, timeout);

            tg.onEvent('viewportChanged', resolutionHandler);
        }
    };
    
    startApp();

  }, []);

  if (view === 'loading') {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –≤–º–µ—Å—Ç–æ null
    return (
      <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', color: 'white' }}>
        –ó–∞–≥—Ä—É–∑–∫–∞...
      </div>
    );
  }

  if (view === 'placeholder') {
    return (
      <I18nContext.Provider value={i18nInstance}>
        <Placeholder error={error} debugInfo={debugInfo} />
      </I18nContext.Provider>
    );
  }

  return (
    <ErrorBoundary debugInfo={debugInfo}>
      <AppReadyContext.Provider value={isAppReady}> {/* ‚úÖ –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤—Å—ë –≤ –Ω–æ–≤—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä */}
        <I18nContext.Provider value={i18nInstance}>
          <LocalizationProvider>
            <ProfileProvider>
              <Router>
                <Routes>
                  <Route path="/welcome" element={<WelcomePage />} />
                  <Route path="/language" element={<LanguagePage />} />
                  <Route path="/" element={<PrivateRoute />}>
                    <Route index element={<Navigate to="/record" />} />
                    <Route path="record" element={<RecordingPage />} />
                    <Route path="interpretation/:id" element={<InterpretationPage />} />
                    <Route path="history" element={<HistoryPage />} />
                    <Route path="profile" element={<ProfilePage />} />
                    <Route path="settings" element={<SettingsPage />} />
                  </Route>
                </Routes>
              </Router>
            </ProfileProvider>
          </LocalizationProvider>
        </I18nContext.Provider>
      </AppReadyContext.Provider>
    </ErrorBoundary>
  );
}

export default App;