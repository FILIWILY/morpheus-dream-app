import React from 'react';
import styles from './Placeholder.module.css'; // –°–æ–∑–¥–∞–¥–∏–º —Å—Ç–∏–ª–∏ –¥–ª—è —ç—Ç–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞

const Placeholder = ({ error, debugInfo }) => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    const botUrl = 'https://t.me/your_bot_name_here';

    const renderDebugValue = (value) => {
        if (typeof value === 'boolean') {
            return value ? '‚úÖ' : '‚ùå';
        }
        if (value === undefined || value === null) {
            return '‚ùì';
        }
        return String(value);
    };

    return (
        <div className={styles.placeholderContainer}>
            <div className={styles.placeholderContent}>
                <h1 className={styles.title}>Morpheus Dream</h1>
                <p className={styles.subtitle}>–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Å–Ω–æ–≤</p>
                
                {error ? (
                    <p className={styles.error}>
                        –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {error}
                    </p>
                ) : (
                    <p className={styles.instruction}>
                        –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ Telegram.
                    </p>
                )}
                
                {/* –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                {debugInfo && Object.keys(debugInfo).length > 0 && (
                    <div className={styles.debug}>
                        <h3>üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:</h3>
                        <div className={styles.debugInfo}>
                            {Object.entries(debugInfo).map(([key, value]) => {
                                // –ù–µ —Ä–µ–Ω–¥–µ—Ä–∏–º —Å–ª–æ–∂–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã, —Ç–æ–ª—å–∫–æ –ø—Ä–∏–º–∏—Ç–∏–≤—ã
                                if (typeof value === 'object' && value !== null) {
                                    return (
                                        <div key={key} className={styles.debugObject}>
                                            <p><strong>{key}:</strong></p>
                                            <div className={styles.debugNestedObject}>
                                                {Object.entries(value).map(([nestedKey, nestedValue]) => (
                                                    <p key={nestedKey}><strong>{nestedKey}:</strong> {renderDebugValue(nestedValue)}</p>
                                                ))}
                                            </div>
                                        </div>
                                    );
                                }
                                return (
                                    <p key={key}><strong>{key}:</strong> {renderDebugValue(value)}</p>
                                );
                            })}
                        </div>
                    </div>
                )}
                
                <a href={botUrl} className={styles.telegramButton}>
                    –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram
                </a>
            </div>
        </div>
    );
};

export default Placeholder;
