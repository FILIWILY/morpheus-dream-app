.pageContainer {
    display: flex;
    flex-direction: column;
    flex-grow: 1; 
    max-width: 900px; 
    margin: 0 auto;
    padding: 0 16px; /* Main side paddings */
    box-sizing: border-box;
    overflow-x: hidden;
}

.header {
    display: flex;
    justify-content: flex-start; /* Align icon to the left */
    align-items: center;
    width: 100%;
    /* Используем max() для комбинации дизайнерского отступа и safe area от Telegram */
    margin-top: max(80px, calc(var(--tg-safe-area-inset-top) + 40px));
    padding: 4px 8px;
    box-sizing: border-box;
    position: relative; /* Needed for absolute positioning of the title */

    /* Glassmorphism Styles */
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.18);
    box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.3);
    border-radius: 24px;
}

.title {
    font-size: clamp(1.1rem, 4vw, 1.3rem) !important; /* Further reduced font size */
    font-weight: 500 !important;
    text-align: center;
    color: var(--text-primary) !important; /* Светлый цвет текста */
    
    /* Centering trick */
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 70%; /* Allow wrapping */
    pointer-events: none; /* Make it non-interactive */
}

.orbHighlight {
    font-weight: 700;
    background: linear-gradient(135deg, #8B5CF6 0%, #06B6D4 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 0 20px rgba(139, 92, 246, 0.6);
    /* Свечение для не-webkit браузеров */
    filter: drop-shadow(0 0 10px rgba(139, 92, 246, 0.8));
    animation: orbPulse 2s ease-in-out infinite;
}

@keyframes orbPulse {
    0%, 100% {
        filter: drop-shadow(0 0 10px rgba(139, 92, 246, 0.8));
    }
    50% {
        filter: drop-shadow(0 0 20px rgba(139, 92, 246, 1));
    }
}

.content {
    flex-grow: 1;
    display: flex; 
    flex-direction: column;
    justify-content: space-between; 
    align-items: center; 
    width: 100%;
}

.orbContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-grow: 1;
    width: 100%;
}

.footer {
    width: 100%;
    padding: 0;
    margin-bottom: 12px;
    display: flex;
    justify-content: center;
}
.inputWrapper {
    display: flex;
    align-items: center;
    gap: 4px;
    width: 100%;
    padding: 4px 8px;
    box-sizing: border-box;
    
    /* Glassmorphism Styles */
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.1));
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.18);
    box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.3);
    border-radius: 24px;
}
.textField {
    width: 100%;
    color: var(--text-primary);
}

/* Force placeholder to wrap */
.textField :global(.MuiInputBase-input::placeholder) {
    white-space: pre-wrap;
    opacity: 0.7 !important;
}

/* Fade out animation for header and footer */
.fadeOut {
    opacity: 0 !important;
    pointer-events: none !important;
    transition: opacity 0.4s ease-out;
}

/* Top label container - at header level */
.topLabelContainer {
    position: absolute;
    top: max(100px, calc(var(--tg-safe-area-inset-top) + 60px));
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 100;
    animation: fadeInSimple 0.6s ease-out;
    pointer-events: none;
    width: 90%;
}

/* Center number container - for countdown digits */
.centerNumberContainer {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 100;
    pointer-events: none;
}

/* Bottom hint container - below orb */
.bottomHintContainer {
    position: absolute;
    top: 70%;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 100;
    animation: fadeInSimple 0.6s ease-out;
    pointer-events: none;
}

@keyframes fadeInSimple {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.countdownLabel {
    font-size: 20px !important;
    font-weight: 500 !important;
    color: #ffffff !important;
    text-align: center;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.6);
}

.countdownNumber {
    font-size: 140px !important;
    font-weight: 700 !important;
    color: #ffffff !important;
    line-height: 1 !important;
    animation: countdownPulse 1.1s ease-in-out;
    text-shadow: 
        0 0 30px rgba(255, 255, 255, 0.6),
        0 0 60px rgba(138, 92, 246, 0.4),
        0 4px 12px rgba(0, 0, 0, 0.8);
}

@keyframes countdownPulse {
    0% {
        transform: scale(0.8);
        opacity: 0;
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

.cancelHint {
    font-size: 14px !important;
    font-weight: 400 !important;
    color: rgba(255, 255, 255, 0.7) !important;
    text-align: center;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.6);
    margin-top: 8px !important;
}

.recordingLabel {
    font-size: 18px !important;
    font-weight: 500 !important;
    color: #ffffff !important;
    text-align: center;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.6);
    animation: fadeInSimple 0.6s ease-out;
    line-height: 1.5;
    padding: 0 16px;
}

.orbHighlightStop {
    font-weight: 700;
    background: linear-gradient(135deg, #FF6B35 0%, #FF416C 50%, #FF4500 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 0 20px rgba(255, 65, 108, 0.8);
    filter: drop-shadow(0 0 12px rgba(255, 107, 53, 0.9));
    animation: orbStopPulse 2s ease-in-out infinite;
}

@keyframes orbStopPulse {
    0%, 100% {
        filter: drop-shadow(0 0 12px rgba(255, 107, 53, 0.9));
    }
    50% {
        filter: drop-shadow(0 0 20px rgba(255, 65, 108, 1));
    }
}

@keyframes pulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.6;
    }
}

/* Cancel button during recording */
.cancelButtonContainer {
    position: absolute;
    bottom: 40px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
    animation: fadeInSimple 0.6s ease-out;
}

.cancelButton {
    background: linear-gradient(135deg, rgba(239, 68, 68, 0.15), rgba(220, 38, 38, 0.1)) !important;
    backdrop-filter: blur(10px) !important;
    -webkit-backdrop-filter: blur(10px) !important;
    border: 1px solid rgba(239, 68, 68, 0.4) !important;
    box-shadow: 0 4px 20px rgba(239, 68, 68, 0.3) !important;
    border-radius: 20px !important;
    padding: 12px 32px !important;
    color: #FF6B6B !important;
    font-size: 16px !important;
    font-weight: 600 !important;
    text-transform: none !important;
    transition: all 0.3s ease !important;
}

.cancelButton:hover {
    background: linear-gradient(135deg, rgba(239, 68, 68, 0.25), rgba(220, 38, 38, 0.2)) !important;
    border-color: rgba(239, 68, 68, 0.6) !important;
    box-shadow: 0 6px 24px rgba(239, 68, 68, 0.4) !important;
    transform: scale(1.05);
}

.cancelButton:active {
    transform: scale(0.98);
}